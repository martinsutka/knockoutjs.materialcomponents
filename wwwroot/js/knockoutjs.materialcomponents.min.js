((e,s)=>{"function"==typeof define&&define.amd?define("knockoutjs.materialcomponents",["knockout","material-components-web"],s):s(e.ko,e.mdc)})("undefined"!=typeof self?self:this,(t,a)=>{let i=function(){return this}(),n=t.materialcomponents=t.materialcomponents||{},o=t.materialcomponents.utils=t.materialcomponents.utils||{};o.guid=function(){return i.crypto.randomUUID()},o.throttle=function(i,t){let a=0;return function(...e){var s=(new Date).getTime();s-a<t||(a=s,i(...e))}},o.register=function(e,i,s="template"){n[i.name]=i,t.components.register(e,{template:i[s],viewModel:{createViewModel:(e,s)=>((e=e||{}).element=s.element.querySelector?s.element:s.element.parentElement||s.element.parentNode,new i(e))}})};function e(e){console.debug("Icon()"),this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_icon_"+o.guid()),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||"")}function s(e){console.debug("CircularProgress()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_circular-progress_"+o.guid()),this.label=t.isObservable(e.label)?e.label:t.observable(e.label||""),this.isOpen=t.isObservable(e.isOpen)?e.isOpen:t.observable("boolean"!=typeof e.isOpen||e.isOpen),this.isDeterminate=t.isObservable(e.isDeterminate)?e.isDeterminate:t.observable("boolean"!=typeof e.isDeterminate||e.isDeterminate),this.progress=t.isObservable(e.progress)?e.progress:t.observable("number"==typeof e.progress?e.progress:0),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._isOpenChangedSubscribe=null,this._isDeterminateChangedSubscribe=null,this._progressChangedSubscribe=null}function c(e){console.debug("LinearProgress()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_linear-progress_"+o.guid()),this.label=t.isObservable(e.label)?e.label:t.observable(e.label||""),this.isOpen=t.isObservable(e.isOpen)?e.isOpen:t.observable("boolean"!=typeof e.isOpen||e.isOpen),this.isDeterminate=t.isObservable(e.isDeterminate)?e.isDeterminate:t.observable("boolean"!=typeof e.isDeterminate||e.isDeterminate),this.progress=t.isObservable(e.progress)?e.progress:t.observable("number"==typeof e.progress?e.progress:0),this.buffer=t.isObservable(e.buffer)?e.buffer:t.observable("number"==typeof e.buffer?e.buffer:0),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._isOpenChangedSubscribe=null,this._isDeterminateChangedSubscribe=null,this._progressChangedSubscribe=null,this._bufferChangedSubscribe=null}e.prototype.koDescendantsComplete=function(e){e.replaceWith(e.firstElementChild)},e.prototype.dispose=function(){console.log("~Icon()")},e.template='<i class="material-icons" data-bind="text: icon, class: classes, attr: { id: id }"></i>',o.register("mat-icon",e),s.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.circularProgress.MDCCircularProgress(s),this._isOpenChangedSubscribe=this.isOpen.subscribe(this._isOpenChanged,this),this._isDeterminateChangedSubscribe=this.isDeterminate.subscribe(this._isDeterminateChanged,this),this._progressChangedSubscribe=this.progress.subscribe(this._progressChanged,this),this.isOpen.valueHasMutated(),this.isDeterminate.valueHasMutated(),this.progress.valueHasMutated()},s.prototype.dispose=function(){console.log("~CircularProgress()"),this._isOpenChangedSubscribe.dispose(),this._isDeterminateChangedSubscribe.dispose(),this._progressChangedSubscribe.dispose(),this.mdcComponent.destroy()},s.prototype._isOpenChanged=function(e){this.mdcComponent[e?"open":"close"]()},s.prototype._isDeterminateChanged=function(e){this.mdcComponent.determinate=e},s.prototype._progressChanged=function(e){this.mdcComponent.progress=e},s.template=`<div class="mdc-circular-progress" style="width:48px;height:48px;" role="progressbar" aria-valuemin="0" aria-valuemax="1"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-circular-progress__determinate-container">
        <svg class="mdc-circular-progress__determinate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
            <circle class="mdc-circular-progress__determinate-track" cx="24" cy="24" r="18" stroke-width="4"/>
            <circle class="mdc-circular-progress__determinate-circle" cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="113.097" stroke-width="4"/>
        </svg>
    </div>
    <div class="mdc-circular-progress__indeterminate-container">
        <div class="mdc-circular-progress__spinner-layer">
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549" stroke-width="4"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__gap-patch">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549" stroke-width="3.2"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549" stroke-width="4"/>
                </svg>
            </div>
        </div>
    </div>
</div>`,s.templateMedium=`<div class="mdc-circular-progress" style="width:36px;height:36px;" role="progressbar" aria-valuemin="0" aria-valuemax="1"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-circular-progress__determinate-container">
        <svg class="mdc-circular-progress__determinate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
            <circle class="mdc-circular-progress__determinate-track" cx="16" cy="16" r="12.5" stroke-width="3"/>
            <circle class="mdc-circular-progress__determinate-circle" cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="78.54" stroke-width="3"/>
        </svg>
    </div>
    <div class="mdc-circular-progress__indeterminate-container">
        <div class="mdc-circular-progress__spinner-layer">
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="39.27" stroke-width="3"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__gap-patch">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="39.27" stroke-width="2.4"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="39.27" stroke-width="3"/>
                </svg>
            </div>
        </div>
    </div>
</div>`,s.templateSmall=`<div class="mdc-circular-progress" style="width:24px;height:24px;" role="progressbar" aria-valuemin="0" aria-valuemax="1"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-circular-progress__determinate-container">
        <svg class="mdc-circular-progress__determinate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <circle class="mdc-circular-progress__determinate-track" cx="12" cy="12" r="8.75" stroke-width="2.5"/>
            <circle class="mdc-circular-progress__determinate-circle" cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="54.978" stroke-width="2.5"/>
        </svg>
    </div>
    <div class="mdc-circular-progress__indeterminate-container">
        <div class="mdc-circular-progress__spinner-layer">
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="27.489" stroke-width="2.5"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__gap-patch">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="27.489" stroke-width="2"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="27.489" stroke-width="2.5"/>
                </svg>
            </div>
        </div>
    </div>
</div>`,o.register("mat-circular-progress",s),o.register("mat-circular-progress-medium",s,"templateMedium"),o.register("mat-circular-progress-small",s,"templateSmall");c.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.linearProgress.MDCLinearProgress(s),this._isOpenChangedSubscribe=this.isOpen.subscribe(this._isOpenChanged,this),this._isDeterminateChangedSubscribe=this.isDeterminate.subscribe(this._isDeterminateChanged,this),this._progressChangedSubscribe=this.progress.subscribe(this._progressChanged,this),this._bufferChangedSubscribe=this.buffer.subscribe(this._bufferChanged,this),this.isOpen.valueHasMutated(),this.isDeterminate.valueHasMutated(),this.progress.valueHasMutated(),this.buffer.valueHasMutated()},c.prototype.dispose=function(){console.log("~LinearProgress()"),this._isOpenChangedSubscribe.dispose(),this._isDeterminateChangedSubscribe.dispose(),this._progressChangedSubscribe.dispose(),this._bufferChangedSubscribe.dispose(),this.mdcComponent.destroy()},c.prototype._isOpenChanged=function(e){this.mdcComponent[e?"open":"close"]()},c.prototype._isDeterminateChanged=function(e){this.mdcComponent.determinate=e},c.prototype._progressChanged=function(e){this.mdcComponent.progress=e},c.prototype._bufferChanged=function(e){this.mdcComponent.buffer=e},c.template=`<div role="progressbar" class="mdc-linear-progress" aria-valuemin="0" aria-valuemax="1" aria-valuenow="0"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-linear-progress__buffer">
        <div class="mdc-linear-progress__buffer-bar"></div>
        <div class="mdc-linear-progress__buffer-dots"></div>
    </div>
    <div class="mdc-linear-progress__bar mdc-linear-progress__primary-bar">
        <span class="mdc-linear-progress__bar-inner"></span>
    </div>
    <div class="mdc-linear-progress__bar mdc-linear-progress__secondary-bar">
        <span class="mdc-linear-progress__bar-inner"></span>
    </div>
</div>`,o.register("mat-linear-progress",c);function l(e){console.debug("Tooltip()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_tooltip_"+o.guid()),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.data=t.isObservable(e.data)?e.data:t.observable(e.data||""),this.showDelay=t.isObservable(e.showDelay)?e.showDelay:t.observable("number"==typeof e.showDelay?e.showDelay:l.SHOW_DELAY),this.hideDelay=t.isObservable(e.hideDelay)?e.hideDelay:t.observable("number"==typeof e.hideDelay?e.hideDelay:l.HIDE_DELAY),this.xPosition=t.isObservable(e.xPosition)?e.xPosition:t.observable(e.xPosition||l.X_POSITION.DETECTED),this.yPosition=t.isObservable(e.yPosition)?e.yPosition:t.observable(e.yPosition||l.Y_POSITION.DETECTED),this.anchor=e.anchor||null,this._showDelayChangedSubscribe=null,this._hideDelayChangedSubscribe=null,this._positionChangedSubscribe=null}l.prototype.koDescendantsComplete=function(e){var s;this.anchor=e.parentElement.querySelector(this.anchor),this.anchor?(this.anchor.setAttribute("aria-describedby",this.id()),i.document.body.append(e),s=e.firstElementChild,e.replaceWith(s),this.mdcComponent=new a.tooltip.MDCTooltip(s),this._showDelayChangedSubscribe=this.showDelay.subscribe(this._showDelayChanged,this),this._hideDelayChangedSubscribe=this.hideDelay.subscribe(this._hideDelayChanged,this),this._positionChangedSubscribe=t.computed(this._positionChanged,this).extend({deferred:!0}),this.showDelay.valueHasMutated(),this.hideDelay.valueHasMutated(),this.xPosition.valueHasMutated(),this.yPosition.valueHasMutated()):console.warn("Tooltip : Missing anchor element for tooltip '%s'.",this.id())},l.prototype.dispose=function(){console.log("~Tooltip()"),this.anchor&&(this._showDelayChangedSubscribe.dispose(),this._hideDelayChangedSubscribe.dispose(),this._positionChangedSubscribe.dispose(),this.mdcComponent.destroy(),this.anchor.removeAttribute("aria-describedby"))},l.prototype._showDelayChanged=function(e){this.mdcComponent.setShowDelay(e)},l.prototype._hideDelayChanged=function(e){this.mdcComponent.setHideDelay(e)},l.prototype._positionChanged=function(){var e=this.xPosition(),s=this.yPosition();t.computedContext.isInitial()||this.mdcComponent.setTooltipPosition({xPos:e,yPos:s})},l.X_POSITION={DETECTED:0,START:1,CENTER:2,END:3,SIDE_START:4,SIDE_END:5},l.Y_POSITION={DETECTED:0,ABOVE:1,BELOW:2,SIDE:3},l.SHOW_DELAY=500,l.HIDE_DELAY=600,l.template=`<div class="mdc-tooltip" role="tooltip" aria-hidden="true"
    data-bind="attr: { id: id }, class: classes">
    <div class="mdc-tooltip__surface mdc-tooltip__surface-animation">
        <span class="mdc-tooltip__label" data-bind="template: { nodes: $componentTemplateNodes, data: data }"><span>
    </div>
</div>`,o.register("mat-tooltip",l);function r(e){console.debug("RichTooltip()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_rich-tooltip_"+o.guid()),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.data=t.isObservable(e.data)?e.data:t.observable(e.data||""),this.showDelay=t.isObservable(e.showDelay)?e.showDelay:t.observable("number"==typeof e.showDelay?e.showDelay:l.SHOW_DELAY),this.hideDelay=t.isObservable(e.hideDelay)?e.hideDelay:t.observable("number"==typeof e.hideDelay?e.hideDelay:l.HIDE_DELAY),this.isPersistent=t.isObservable(e.isPersistent)?e.isPersistent:t.observable("boolean"==typeof e.isPersistent&&e.isPersistent),this.anchor=e.anchor||null,this._showDelayChangedSubscribe=null,this._hideDelayChangedSubscribe=null}function d(e){console.debug("IconButton()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_icon-button_"+o.guid()),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isFocused=t.isObservable(e.isFocused)?e.isFocused:t.observable("boolean"==typeof e.isFocused&&e.isFocused),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.isLoading=t.observable(!1),this.onClick=e.onClick}r.prototype.koDescendantsComplete=function(e){var s;this.anchor=e.parentElement.querySelector(this.anchor),this.anchor?(this.anchor.setAttribute("data-tooltip-id",this.id()),this.anchor.setAttribute("aria-haspopup","dialog"),this.anchor.setAttribute("aria-expanded","false"),s=e.firstElementChild,e.replaceWith(s),this.mdcComponent=new a.tooltip.MDCTooltip(s),this._showDelayChangedSubscribe=this.showDelay.subscribe(this._showDelayChanged,this),this._hideDelayChangedSubscribe=this.hideDelay.subscribe(this._hideDelayChanged,this),this.showDelay.valueHasMutated(),this.hideDelay.valueHasMutated()):console.warn("RichTooltip : Missing anchor element for tooltip '%s'.",this.id())},r.prototype.dispose=function(){console.log("~RichTooltip()"),this.anchor&&(this._showDelayChangedSubscribe.dispose(),this._hideDelayChangedSubscribe.dispose(),this.mdcComponent.destroy(),this.anchor.removeAttribute("data-tooltip-id"),this.anchor.removeAttribute("aria-haspopup"),this.anchor.removeAttribute("aria-expanded"))},r.prototype._showDelayChanged=function(e){this.mdcComponent.setShowDelay(e)},r.prototype._hideDelayChanged=function(e){this.mdcComponent.setHideDelay(e)},r.template=`<div class="mdc-tooltip mdc-tooltip--rich" role="dialog" aria-hidden="true"
      data-bind="attr: { 
        id: id,
        tabindex: isPersistent() ? -1 : 0,
        'data-mdc-tooltip-persistent': isPersistent
    }, class: classes">
    <div class="mdc-tooltip__surface mdc-tooltip__surface-animation"
         data-bind="template: { nodes: $componentTemplateNodes, data: data }">
    </div>
</div>`,o.register("mat-rich-tooltip",r);d.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.ripple.MDCRipple(s),this.mdcComponent.unbounded=!0},d.prototype.dispose=function(){console.log("~IconButton()"),this.mdcComponent.destroy()},d.prototype._onClick=function(e){var s;"function"!=typeof this.onClick?console.debug("IconButton : _onClick(): Callback for the 'click' event is not defined."):"object"==typeof(s=this.onClick())&&"function"==typeof s.then&&(this.isFocused(!1),this.isEnabled(!1),this.isLoading(!0),s.then(()=>{this.isLoading(!1),this.isEnabled(!0)}))},d.template=`<button class="mdc-icon-button"
    data-bind="attr: { id: id }, enable: isEnabled, hasFocus: isFocused, class: classes, click: _onClick">
    <span class="mdc-icon-button__ripple"></span>
    <span class="mdc-icon-button__focus-ring"></span>
    <i class="material-icons"
        data-bind="text: icon, style: { visibility: isLoading() ? 'hidden' : 'visible' }"></i>
    <mat-circular-progress-small params="isDeterminate: false, isOpen: isLoading, classes: 'mdc-circular-progress--icon-button'"></mat-circular-progress-small>
</button>`,o.register("mat-icon-button",d);function b(e){console.debug("Button()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_button_"+o.guid()),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.iconPosition=t.isObservable(e.iconPosition)?e.iconPosition:t.observable(e.iconPosition||b.ICON_POSITION.start),this.type=t.isObservable(e.type)?e.type:t.observable(e.type||b.TYPE.text),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isFocused=t.isObservable(e.isFocused)?e.isFocused:t.observable("boolean"==typeof e.isFocused&&e.isFocused),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.isLoading=t.observable(!1),this.onClick=e.onClick}function h(e){console.debug("Fab()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_fab_"+o.guid()),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.iconPosition=t.isObservable(e.iconPosition)?e.iconPosition:t.observable(e.iconPosition||h.ICON_POSITION.start),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.type=t.isObservable(e.type)?e.type:t.observable(e.type||h.TYPE.regular),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isFocused=t.isObservable(e.isFocused)?e.isFocused:t.observable("boolean"==typeof e.isFocused&&e.isFocused),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.isLoading=t.observable(!1),this.onClick=e.onClick}b.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.ripple.MDCRipple(s)},b.prototype.dispose=function(){console.log("~Button()"),this.mdcComponent.destroy()},b.prototype._onClick=function(e){var s;"function"!=typeof this.onClick?console.debug("Button : _onClick(): Callback for the 'click' event is not defined."):"object"==typeof(s=this.onClick())&&"function"==typeof s.then&&(this.isFocused(!1),this.isEnabled(!1),this.isLoading(!0),s.then(()=>{this.isLoading(!1),this.isEnabled(!0)}))},b.TYPE={text:0,outlined:1,raised:2},b.ICON_POSITION={start:0,end:1},b.template=`<button class="mdc-button"
         data-bind="css: {
            'mdc-button--icon-leading': icon().length && iconPosition() === ${b.ICON_POSITION.start},
            'mdc-button--icon-trailing': icon().length && iconPosition() === ${b.ICON_POSITION.end},
            'mdc-button--outlined': type() === ${b.TYPE.outlined},
            'mdc-button--raised': type() === ${b.TYPE.raised}
        }, attr: { id: id }, enable: isEnabled, hasFocus: isFocused, class: classes, click: _onClick">
    <span class="mdc-button__ripple"></span>
    <span class="mdc-button__focus-ring"></span>
    <i class="material-icons mdc-button__icon" aria-hidden="true"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${b.ICON_POSITION.start}"></i>
    <span class="mdc-button__label" data-bind="text: text"></span>
    <i class="material-icons mdc-button__icon" aria-hidden="true"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${b.ICON_POSITION.end}"></i>
    <mat-linear-progress params="isDeterminate: false, isOpen: isLoading, classes: 'mdc-linear-progress--button'"></mat-linear-progress>
</button>`,o.register("mat-button",b);h.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.ripple.MDCRipple(s)},h.prototype.dispose=function(){console.log("~Fab()"),this.mdcComponent.destroy()},h.prototype._onClick=function(e){var s;"function"!=typeof this.onClick?console.debug("Fab : _onClick(): Callback for the 'click' event is not defined."):"object"==typeof(s=this.onClick())&&"function"==typeof s.then&&(this.isFocused(!1),this.isEnabled(!1),this.isLoading(!0),s.then(()=>{this.isLoading(!1),this.isEnabled(!0)}))},h.TYPE={regular:0,mini:1,extended:2},h.ICON_POSITION={start:0,end:1},h.template=`<button class="mdc-fab"
         data-bind="css: {
            'mdc-fab--mini': type() === ${h.TYPE.mini},
            'mdc-fab--extended': type() === ${h.TYPE.extended}
         }, attr: { id: id }, enable: isEnabled, hasFocus: isFocused, class: classes, click: _onClick">
    <span class="mdc-fab__ripple"></span>
    <span class="mdc-fab__focus-ring"></span>
    <i class="mdc-fab__icon material-icons"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${h.ICON_POSITION.start}, style: { visibility: isLoading() ? 'hidden' : 'visible' }"></i>
    <span class="mdc-fab__touch"></span>
    <span class="mdc-fab__label" data-bind="text: text, visible: type() === ${h.TYPE.extended}"></span>
    <i class="mdc-fab__icon material-icons"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${h.ICON_POSITION.end}, style: { visibility: isLoading() ? 'hidden' : 'visible' }"></i>
    <mat-circular-progress-small params="isDeterminate: false,
                                         isOpen: isLoading,
                                         classes: type() === ${h.TYPE.mini} ? 'mdc-circular-progress--fab-mini' : 
                                                  type() === ${h.TYPE.extended} && iconPosition() === ${h.ICON_POSITION.start} ? 'mdc-circular-progress--fab-extended-start' : 
                                                  type() === ${h.TYPE.extended} && iconPosition() === ${h.ICON_POSITION.end} ? 'mdc-circular-progress--fab-extended-end' : 'mdc-circular-progress--fab'"></mat-circular-progress-small>
</button>`,o.register("mat-fab",h);function p(e){console.debug("Switch()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_switch_"+o.guid()),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isChecked=t.isObservable(e.isChecked)?e.isChecked:t.observable("boolean"==typeof e.isChecked&&e.isChecked),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._isEnabledChangedSubscribe=null,this._isCheckedChangedSubscribe=null,this._observer=null}p.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.switchControl.MDCSwitch(s),this._isEnabledChangedSubscribe=this.isEnabled.subscribe(this._isEnabledChanged,this),this._isCheckedChangedSubscribe=this.isChecked.subscribe(this._isCheckedChanged,this),this.isEnabled.valueHasMutated(),this.isChecked.valueHasMutated(),this._observer=new MutationObserver(this._onObserve.bind(this)),this._observer.observe(s,{attributes:!0,attributeFilter:["aria-checked"],attributeOldValue:!0})},p.prototype.dispose=function(){console.log("~Switch()"),this._observer.disconnect(),this._isEnabledChangedSubscribe.dispose(),this._isCheckedChangedSubscribe.dispose(),this.mdcComponent.destroy()},p.prototype._onObserve=function(e){e.forEach(e=>{"attributes"===e.type&&(this._isCheckedChangedSubscribe.dispose(),this.isChecked("true"===e.target.getAttribute("aria-checked")),this._isCheckedChangedSubscribe=this.isChecked.subscribe(this._isCheckedChanged,this))})},p.prototype._isCheckedChanged=function(e){this.mdcComponent.selected=e},p.prototype._isEnabledChanged=function(e){this.mdcComponent.disabled=!e},p.template=`<button id="basic-switch" class="mdc-switch mdc-switch--unselected" type="button" role="switch" aria-checked="false"
         data-bind="attr: { id: id }, class: classes">
    <div class="mdc-switch__track"></div>
    <div class="mdc-switch__handle-track">
        <div class="mdc-switch__handle">
            <div class="mdc-switch__shadow">
                <div class="mdc-elevation-overlay"></div>
            </div>
            <div class="mdc-switch__ripple"></div>
            <div class="mdc-switch__icons">
                <svg class="mdc-switch__icon mdc-switch__icon--on" viewBox="0 0 24 24">
                    <path d="M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z" />
                </svg>
                <svg class="mdc-switch__icon mdc-switch__icon--off" viewBox="0 0 24 24">
                    <path d="M20 13H4v-2h16v2z" />
                </svg>
            </div>
        </div>
    </div>
    <span class="mdc-switch__focus-ring-wrapper">
        <div class="mdc-switch__focus-ring"></div>
    </span>
</button>`,o.register("mat-switch",p);function m(e){console.debug("Chip()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_chip_"+o.guid()),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.trailingIcon=t.isObservable(e.trailingIcon)?e.trailingIcon:t.observable(e.trailingIcon||""),this.type=t.isObservable(e.type)?e.type:t.observable(e.type||m.TYPE.regular),this.isChecked=t.isObservable(e.isChecked)?e.isChecked:t.observable("boolean"==typeof e.isChecked&&e.isChecked),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.onClick=e.onClick,this.onTrailClick=e.onTrailClick}m.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.chips.MDCChip(s),this.mdcComponent.listen("MDCChip:interaction",this._onMdcComponentInteraction.bind(this))},m.prototype.dispose=function(){console.log("~Chip()"),this.mdcComponent.destroy()},m.prototype._onMdcComponentInteraction=function(e){this.type()!==m.TYPE.filter&&this.type()!==m.TYPE.choice||this.isChecked(!this.isChecked()),"function"!=typeof this.onClick?console.debug("Chip : _onClick(): Callback for the 'click' event is not defined."):this.onClick(this)},m.prototype._onMdcComponentTrailingIconInteraction=function(e,s){s.stopPropagation(),"function"!=typeof this.onTrailClick?console.debug("Chip : _onMdcComponentTrailingIconInteraction(): Callback for the 'trailclick' event is not defined."):this.onTrailClick(this)},m.TYPE={regular:0,input:1,filter:2,choice:3},m.template=`<div class="mdc-chip" role="row"
      data-bind="css: { 'mdc-chip--selected': isChecked() }, 
                 attr: { id: id }, 
                 class: classes">
    <div class="mdc-chip__ripple"></div>
    <i class="material-icons mdc-chip__icon mdc-chip__icon--leading"
       data-bind="css: { 'mdc-chip__icon--leading-hidden': isChecked() }, 
                  text: icon, 
                  visible: icon().length"></i>
    <span class="mdc-chip__checkmark" data-bind="visible: type() === ${m.TYPE.filter}">
        <svg class="mdc-chip__checkmark-svg" viewBox="-2 -3 30 30">
            <path class="mdc-chip__checkmark-path" fill="none" stroke="black" d="M1.73,12.91 8.1,19.28 22.79,4.59"/>
        </svg>
    </span>
    <span role="gridcell">
        <span tabindex="0" aria-checked="false" class="mdc-chip__primary-action"
              data-bind="attr: { 
                            role: type() === ${m.TYPE.filter} ? 'checkbox' :
                                  type() === ${m.TYPE.choice} ? 'radio' : 'button'
                         }">
            <span class="mdc-chip__text" data-bind="text: text"></span>
        </span>
    </span>
    <span role="gridcell" data-bind="visible: (type() === ${m.TYPE.input}) || ((type() === ${m.TYPE.filter}) && trailingIcon().length)">
        <i class="material-icons mdc-chip__icon mdc-chip__icon--trailing" tabindex="-1" role="button"
           data-bind="text: trailingIcon() || 'clear', click: _onMdcComponentTrailingIconInteraction"></i>
    </span>
</div>`,o.register("mat-chip",m);function u(e){console.debug("Slider()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_slider_"+o.guid()),this.name=t.isObservable(e.name)?e.name:t.observable(e.name||""),this.min=t.isObservable(e.min)?e.min:t.observable("number"==typeof e.min?e.min:0),this.max=t.isObservable(e.max)?e.max:t.observable("number"==typeof e.max?e.max:100),this.value=t.isObservable(e.value)?e.value:t.observable("number"==typeof e.value?e.value:0),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isDiscrete=t.isObservable(e.isDiscrete)?e.isDiscrete:t.observable("boolean"==typeof e.isDiscrete&&e.isDiscrete),this.showTickMarks=t.isObservable(e.showTickMarks)?e.showTickMarks:t.observable("boolean"==typeof e.showTickMarks&&e.showTickMarks),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._valueChangedSubscribe=null}function v(e){console.debug("RangeSlider()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_rangeslider_"+o.guid()),this.name=t.isObservable(e.name)?e.name:t.observable(e.name||""),this.minRange=t.isObservable(e.minRange)?e.minRange:t.observable("number"==typeof e.minRange?e.minRange:10),this.min=t.isObservable(e.min)?e.min:t.observable("object"==typeof e.min?e.min:{start:0,end:100}),this.max=t.isObservable(e.max)?e.max:t.observable("object"==typeof e.max?e.max:{start:0,end:100}),this.value=t.isObservable(e.value)?e.value:t.observable(e.value instanceof Array?e.value:[0,0]),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isDiscrete=t.isObservable(e.isDiscrete)?e.isDiscrete:t.observable("boolean"==typeof e.isDiscrete&&e.isDiscrete),this.showTickMarks=t.isObservable(e.showTickMarks)?e.showTickMarks:t.observable("boolean"==typeof e.showTickMarks&&e.showTickMarks),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._valueChangedSubscribe=null}u.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.slider.MDCSlider(s),this.mdcComponent.listen("MDCSlider:change",this._onMdcComponentChange.bind(this)),this._valueChangedSubscribe=this.value.subscribe(this._valueChanged,this)},u.prototype.dispose=function(){console.log("~Slider()"),this._valueChangedSubscribe.dispose(),this.mdcComponent.destroy()},u.prototype._valueChanged=function(e){this.mdcComponent.setValue(e)},u.prototype._onMdcComponentChange=function(e){this._valueChangedSubscribe.dispose(),this.value(e.detail.value),this._valueChangedSubscribe=this.value.subscribe(this._valueChanged,this)},u.template=`<div class="mdc-slider"
      data-bind="css: {
        'mdc-slider--disabled': !isEnabled(),
        'mdc-slider--discrete': isDiscrete,
        'mdc-slider--tick-marks': isDiscrete() && showTickMarks()
    }, attr: { id: id }, class: classes">
    <div class="mdc-slider__track">
        <div class="mdc-slider__track--inactive"></div>
        <div class="mdc-slider__track--active">
            <div class="mdc-slider__track--active_fill"></div>
        </div>
        <!-- ko if: isDiscrete() && showTickMarks() -->
        <div class="mdc-slider__tick-marks" data-bind="foreach: Array.from({length: max() - min()}, (_, i) => i + 1)">
            <div class="mdc-slider__tick-mark--active"></div>
        </div>
        <!-- /ko -->
    </div>
    <div class="mdc-slider__thumb">
        <!-- ko if: isDiscrete -->
        <div class="mdc-slider__value-indicator-container" aria-hidden="true">
            <div class="mdc-slider__value-indicator">
                <span class="mdc-slider__value-indicator-text"></span>
            </div>
        </div>
        <!-- /ko -->
        <div class="mdc-slider__thumb-knob"></div>
        <input class="mdc-slider__input" type="range"
               data-bind="attr: { id: id() + '_input', name: name, enable: isEnabled, min: min, max: max, value: value }" />
    </div>
</div>`,o.register("mat-slider",u);v.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.slider.MDCSlider(s),this.mdcComponent.listen("MDCSlider:change",this._onMdcComponentChange.bind(this)),this._valueChangedSubscribe=this.value.subscribe(this._valueChanged,this),this.value.valueHasMutated()},v.prototype.dispose=function(){console.log("~RangeSlider()"),this._valueChangedSubscribe.dispose(),this.mdcComponent.destroy()},v.prototype._valueChanged=function(e){this.mdcComponent.setValueStart(e[0]),this.mdcComponent.setValue(e[1])},v.prototype._onMdcComponentChange=function(e){this._valueChangedSubscribe.dispose();var s=this.value();s[1===e.detail.thumb?0:1]=e.detail.value,this.value(s),this._valueChangedSubscribe=this.value.subscribe(this._valueChanged,this)},v.template=`<div class="mdc-slider mdc-slider--range"
      data-bind="css: {
        'mdc-slider--disabled': !isEnabled(),
        'mdc-slider--discrete': isDiscrete,
        'mdc-slider--tick-marks': isDiscrete() && showTickMarks()
    }, attr: { id: id, 'data-min-range': minRange }, class: classes">
    <div class="mdc-slider__track">
        <div class="mdc-slider__track--inactive"></div>
        <div class="mdc-slider__track--active">
            <div class="mdc-slider__track--active_fill"></div>
        </div>
        <!-- ko if: isDiscrete() && showTickMarks() -->
        <div class="mdc-slider__tick-marks" data-bind="foreach: Array.from({length: max() - min()}, (_, i) => i + 1)">
            <div class="mdc-slider__tick-mark--active"></div>
        </div>
        <!-- /ko -->
    </div>
    <div class="mdc-slider__thumb">
        <!-- ko if: isDiscrete -->
        <div class="mdc-slider__value-indicator-container" aria-hidden="true">
            <div class="mdc-slider__value-indicator">
                <span class="mdc-slider__value-indicator-text"></span>
            </div>
        </div>
        <!-- /ko -->
        <div class="mdc-slider__thumb-knob"></div>
        <input class="mdc-slider__input" type="range"
               data-bind="attr: { id: id() + '_input-start', name: 'rangeStart', enable: isEnabled, min: min().start, max: max().start, value: value()[0] }" />
    </div>
    <div class="mdc-slider__thumb">
        <!-- ko if: isDiscrete -->
        <div class="mdc-slider__value-indicator-container" aria-hidden="true">
            <div class="mdc-slider__value-indicator">
                <span class="mdc-slider__value-indicator-text"></span>
            </div>
        </div>
        <!-- /ko -->
        <div class="mdc-slider__thumb-knob"></div>
        <input class="mdc-slider__input" type="range"
               data-bind="attr: { id: id() + '_input-end', name: 'rangeEnd', enable: isEnabled, min: min().end, max: max().end, value: value()[1] }" />
    </div>    
</div>`,o.register("mat-range-slider",v);function _(e){console.debug("Tab()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_tab_"+o.guid()),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.indicator=t.isObservable(e.indicator)?e.indicator:t.observable(e.indicator||_.INDICATOR.default),this.isActive=t.isObservable(e.isActive)?e.isActive:t.observable("boolean"==typeof e.isActive&&e.isActive),this.isStacked=t.isObservable(e.isStacked)?e.isStacked:t.observable("boolean"==typeof e.isStacked&&e.isStacked),this.isMinWidth=t.isObservable(e.isMinWidth)?e.isMinWidth:t.observable("boolean"==typeof e.isMinWidth&&e.isMinWidth),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),t.isObservableArray(e.tabs)&&e.tabs.push(this),this.onClick=e.onClick}_.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.tab.MDCTab(s),this.mdcComponent.listen("MDCTab:interacted",o.throttle(this._onMdcComponentInteracted.bind(this),100))},_.prototype.dispose=function(){console.log("~Tab()"),this.mdcComponent.destroy()},_.prototype._onMdcComponentInteracted=function(e){"function"!=typeof this.onClick?console.debug("Tab : _onClick(): Callback for the 'click' event is not defined."):this.onClick(this)},_.INDICATOR={default:0,onlyContent:1},_.template=`<button class="mdc-tab" role="tab"
         data-bind="css: {
                        'mdc-tab--active': isActive(),
                        'mdc-tab--stacked': isStacked(),
                        'mdc-tab--min-width': isMinWidth()
                    }, 
                    attr: { 
                        id: id, 
                        'aria-selected': isActive() ? true : false 
                    },
                    class: classes">
    <span class="mdc-tab__content">
        <i class="mdc-tab__icon material-icons" aria-hidden="true"
           data-bind="text: icon, visible: icon().length"></i>
        <span class="mdc-tab__text-label" data-bind="text: text"></span>
        <!-- ko if: indicator() === ${_.INDICATOR.onlyContent} -->
        <span class="mdc-tab-indicator",
              data-bind="css: { 'mdc-tab-indicator--active': isActive() }">
            <span class="mdc-tab-indicator__content mdc-tab-indicator__content--underline"></span>
        </span>
        <!-- /ko -->        
    </span>
    <!-- ko if: indicator() === ${_.INDICATOR.default} -->
    <span class="mdc-tab-indicator",
          data-bind="css: { 'mdc-tab-indicator--active': isActive() }">
        <span class="mdc-tab-indicator__content mdc-tab-indicator__content--underline"></span>
    </span>
    <!-- /ko -->
    <span class="mdc-tab__ripple"></span>
    <div class="mdc-tab__focus-ring"></div>
</button>`,o.register("mat-tab",_);function g(e){console.debug("TabBar()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_tab-bar_"+o.guid()),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.isFocusedWhenActivate=t.isObservable(e.isFocusedWhenActivate)?e.isFocusedWhenActivate:t.observable("boolean"!=typeof e.isFocusedWhenActivate||e.isFocusedWhenActivate),this.isAutomaticallyActivated=t.isObservable(e.isAutomaticallyActivated)?e.isAutomaticallyActivated:t.observable("boolean"!=typeof e.isAutomaticallyActivated||e.isAutomaticallyActivated),this.tabs=t.observableArray(),this.activeTab=t.isObservable(e.activeTab)?e.activeTab:t.observable(["string","number"].includes(typeof e.activeTab)?e.activeTab:null),this._isFocusedWhenActivateSubscribe=null,this._isAutomaticallyActivatedSubscribe=null,this._activeTabSubscribe=null}function C(e){console.debug("Checkbox()"),this.mdcComponent=null,this.mdcComponentField=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_checkbox_"+o.guid()),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.note=t.isObservable(e.note)?e.note:t.observable(e.note||""),this.value=t.isObservable(e.value)?e.value:t.observable(e.value||""),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isChecked=t.isObservableArray(e.isChecked)||t.isObservable(e.isChecked)?e.isChecked:t.observable("boolean"==typeof e.isChecked&&e.isChecked),this.isIndeterminate=t.isObservable(e.isIndeterminate)?e.isIndeterminate:t.observable("boolean"==typeof e.isIndeterminate&&e.isIndeterminate),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._isIndeterminateChangedSubscribe=null}function f(e){console.debug("Radio()"),this.mdcComponent=null,this.mdcComponentField=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_radio_"+o.guid()),this.name=t.isObservable(e.name)?e.name:t.observable(e.name||""),this.value=t.isObservable(e.value)?e.value:t.observable(e.value||""),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isChecked=t.isObservable(e.isChecked)?e.isChecked:t.observable("boolean"==typeof e.isChecked&&e.isChecked),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||"")}g.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.tabBar.MDCTabBar(s),this.mdcComponent.listen("MDCTabBar:activated",this._onMdcComponentActivated.bind(this)),this._isFocusedWhenActivateSubscribe=this.isFocusedWhenActivate.subscribe(this._isFocusedWhenActivateChanged,this),this._isAutomaticallyActivatedSubscribe=this.isAutomaticallyActivated.subscribe(this._isAutomaticallyActivatedChanged,this),this._activeTabSubscribe=this.activeTab.subscribe(this._activeTabChanged,this),this.isFocusedWhenActivate.valueHasMutated(),this.isAutomaticallyActivated.valueHasMutated(),this.activeTab.valueHasMutated()},g.prototype.dispose=function(){console.log("~TabBar()"),this._isFocusedWhenActivateSubscribe.dispose(),this._isAutomaticallyActivatedSubscribe.dispose(),this._activeTabSubscribe.dispose(),this.mdcComponent.destroy()},g.prototype._onMdcComponentActivated=function(i){this.tabs().forEach((e,s)=>e.isActive(s===i.detail.index))},g.prototype._isFocusedWhenActivateChanged=function(e){this.mdcComponent.focusOnActivate=e},g.prototype._isAutomaticallyActivatedChanged=function(e){this.mdcComponent.useAutomaticActivation=e},g.prototype._activeTabChanged=function(s){if(null===s)this.tabs().forEach(e=>e.isActive(!1));else{let e=s;"number"==typeof(e="string"==typeof s?this.tabs().findIndex(e=>e.id()===s):e)&&0<=e&&(this._activeTabSubscribe.dispose(),this.mdcComponent.activateTab(e),this._activeTabSubscribe=this.activeTab.subscribe(this._activeTabChanged,this))}},g.template=`<div class="mdc-tab-bar" role="tablist"
    data-bind="attr: { id: id }, class: classes">
    <div class="mdc-tab-scroller">
        <div class="mdc-tab-scroller__scroll-area">
            <div class="mdc-tab-scroller__scroll-content"
                 data-bind="template: { nodes: $componentTemplateNodes, data: { tabs: tabs } }">
            </div>
        </div>
    </div>
</div>`,o.register("mat-tab-bar",g),C.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.checkbox.MDCCheckbox(s.querySelector(".mdc-checkbox")),this.mdcComponentField=new a.formField.MDCFormField(s),this.mdcComponentField.input=this.mdcComponent,this._isIndeterminateChangedSubscribe=this.isIndeterminate.subscribe(this._isIndeterminateChanged,this),this._isCheckedChangedSubscribe=this.isChecked.subscribe(this._isCheckedChanged,this),this.isIndeterminate.valueHasMutated(),this.isChecked.valueHasMutated()},C.prototype.dispose=function(){console.log("~Checkbox()"),this._isIndeterminateChangedSubscribe.dispose(),this._isCheckedChangedSubscribe.dispose(),this.mdcComponentField.destroy(),this.mdcComponent.destroy()},C.prototype._isIndeterminateChanged=function(e){this.mdcComponent.indeterminate=e},C.prototype._isCheckedChanged=function(e){Array.isArray(e)?this.mdcComponent.checked=e.includes(this.value()):this.mdcComponent.checked=e},C.template=`<div class="mdc-form-field"
      data-bind="attr: { id: id }, class: classes">
    <div class="mdc-checkbox mdc-checkbox--touch">
        <input type="checkbox" class="mdc-checkbox__native-control"
               data-bind="attr: { id: id() + '_input' }, enable: isEnabled, checkedValue: value, checked: isChecked" />
        <div class="mdc-checkbox__background">
            <svg class="mdc-checkbox__checkmark" viewBox="0 0 24 24">
                <path class="mdc-checkbox__checkmark-path" fill="none" d="M1.73,12.91 8.1,19.28 22.79,4.59" />
            </svg>
            <div class="mdc-checkbox__mixedmark"></div>
        </div>
        <div class="mdc-checkbox__ripple"></div>
        <div class="mdc-checkbox__focus-ring"></div>
    </div>
    <label class="mdc-checkbox__label"
           data-bind="visible: text().length,
                      attr: { for: id() + '_input' },
                      css: {
                        'mdc-checkbox__label--note': note().length
                      }">
        <span data-bind="text: text"></span>
        <small class="mdc-checkbox__note" data-bind="text: note, visible: note().length"></small>
    </label>
</div>`,o.register("mat-checkbox",C);f.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new a.radio.MDCRadio(s.querySelector(".mdc-radio")),this.mdcComponentField=new a.formField.MDCFormField(s),this.mdcComponentField.input=this.mdcComponent,this._isCheckedChangedSubscribe=this.isChecked.subscribe(this._isCheckedChanged,this),this.isChecked.valueHasMutated()},f.prototype.dispose=function(){console.log("~Radio()"),this._isCheckedChangedSubscribe.dispose(),this.mdcComponentField.destroy(),this.mdcComponent.destroy()},f.prototype._isCheckedChanged=function(e){this.mdcComponent.checked="boolean"==typeof e?e:e==this.value()},f.template=`<div class="mdc-form-field"
      data-bind="attr: { id: id }, class: classes">
    <div class="mdc-radio mdc-radio--touch">
        <input class="mdc-radio__native-control" type="radio"
               data-bind="attr: { id: id() + '_input', name: name }, checkedValue: value, enable: isEnabled, checked: isChecked"/>
        <div class="mdc-radio__background">
            <div class="mdc-radio__outer-circle"></div>
            <div class="mdc-radio__inner-circle"></div>
        </div>
        <div class="mdc-radio__ripple"></div>
        <div class="mdc-radio__focus-ring"></div>
    </div>
    <label data-bind="text: text, visible: text().length, attr: { for: id() + '_input' }"></label>
</div>`,o.register("mat-radio",f);function y(e){console.debug("TextField()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_textfield_"+o.guid()),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.iconPosition=t.isObservable(e.iconPosition)?e.iconPosition:t.observable(e.iconPosition||y.ICON_POSITION.start),this.note=t.isObservable(e.note)?e.note:t.observable(e.note||""),this.isNotePersistent=t.isObservable(e.isNotePersistent)?e.isNotePersistent:t.observable("boolean"==typeof e.isNotePersistent&&e.isNotePersistent),this.value=t.isObservable(e.value)?e.value:t.observable(e.value||""),this.pattern=t.isObservable(e.pattern)?e.pattern:t.observable(e.pattern||null),this.type=t.isObservable(e.type)?e.type:t.observable(e.type||y.TYPE.text),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isRequired=t.isObservable(e.isRequired)?e.isRequired:t.observable("boolean"==typeof e.isRequired&&e.isRequired),this.isReadonly=t.isObservable(e.isReadonly)?e.isReadonly:t.observable("boolean"==typeof e.isReadonly&&e.isReadonly),this.isAutoSelect=t.isObservable(e.isAutoSelect)?e.isAutoSelect:t.observable("boolean"==typeof e.isAutoSelect&&e.isAutoSelect),this.prefix=t.isObservable(e.prefix)?e.prefix:t.observable(e.prefix||""),this.suffix=t.isObservable(e.suffix)?e.suffix:t.observable(e.suffix||""),this.min=t.isObservable(e.min)?e.min:t.observable("number"==typeof e.min?e.min:null),this.max=t.isObservable(e.max)?e.max:t.observable("number"==typeof e.max?e.max:null),this.step=t.isObservable(e.step)?e.step:t.observable("number"==typeof e.step?e.step:null),this.minLength=t.isObservable(e.minLength)?e.minLength:t.observable("number"==typeof e.minLength?e.minLength:null),this.maxLength=t.isObservable(e.maxLength)?e.maxLength:t.observable("number"==typeof e.maxLength?e.maxLength:null),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||"")}y.prototype.koDescendantsComplete=function(e){var s=e.children[0],i=e.children[1];e.replaceWith(s),s.after(i),this.isAutoSelect()&&s.querySelector("input").addEventListener("focus",function(){"function"==typeof this.select&&this.select()}),this.mdcComponent=new a.textField.MDCTextField(s)},y.prototype.dispose=function(){console.log("~TextField()"),this.mdcComponent.destroy()},y.TYPE={text:"text",number:"number",color:"color",date:"date",time:"time",email:"email",password:"password"},y.ICON_POSITION={start:0,end:1},y.template=`<label class="mdc-text-field mdc-text-field--outlined"
        data-bind="class: classes,
                   attr: { 
                        id: id,
                        'data-value': value
                   },
                   css: {
                        'mdc-text-field--no-label': !text().length,
                        'mdc-text-field--with-leading-icon': icon().length && iconPosition() === ${y.ICON_POSITION.start},
                        'mdc-text-field--with-trailing-icon': icon().length && iconPosition() === ${y.ICON_POSITION.end}
                   }">
    <span class="mdc-notched-outline">
        <span class="mdc-notched-outline__leading"></span>
        <!-- ko if: text().length -->
        <span class="mdc-notched-outline__notch">
            <span class="mdc-floating-label" data-bind="text: text"></span>
        </span>
        <!-- /ko -->
        <span class="mdc-notched-outline__trailing"></span>
    </span>
    <!-- ko if: prefix().length -->
        <span class="mdc-text-field__affix mdc-text-field__affix--prefix" data-bind="text: prefix"></span>
    <!-- /ko -->
    <i class="material-icons mdc-text-field__icon mdc-text-field__icon--leading" tabindex="0" role="button"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${y.ICON_POSITION.start}"></i>
    <input class="mdc-text-field__input"
           data-bind="textInput: value,
                      attr: { type: type, min: min, max: max, step: step, required: isRequired, minlength: minLength, maxlength: maxLength, readonly: isReadonly, pattern: pattern },
                      enable: isEnabled,
                      css: {
                        'mdc-text-field__input--text': type() === '${y.TYPE.text}',
                        'mdc-text-field__input--number': type() === '${y.TYPE.number}',
                        'mdc-text-field__input--color': type() === '${y.TYPE.color}',
                        'mdc-text-field__input--date': type() === '${y.TYPE.date}',
                        'mdc-text-field__input--time': type() === '${y.TYPE.time}',
                        'mdc-text-field__input--email': type() === '${y.TYPE.email}',
                        'mdc-text-field__input--password': type() === '${y.TYPE.password}'
                      }" />
    <i class="material-icons mdc-text-field__icon mdc-text-field__icon--trailing" tabindex="0" role="button"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${y.ICON_POSITION.end}"></i>
    <!-- ko if: suffix().length -->
        <span class="mdc-text-field__affix mdc-text-field__affix--suffix" data-bind="text: suffix"></span>
    <!-- /ko -->
</label>
<div class="mdc-text-field-helper-line" data-bind="visible: note().length">
    <div class="mdc-text-field-helper-text" aria-hidden="true"
         data-bind="text: note,
                    css: {
                        'mdc-text-field-helper-text--persistent': isNotePersistent
                    }"></div>
</div>`,o.register("mat-text-field",y)});