((e,s)=>{"function"==typeof define&&define.amd?define("knockoutjs.materialcomponents",["knockout","material-components-web"],s):s(e.ko,e.mdc)})("undefined"!=typeof self?self:this,(t,i)=>{let a=function(){return this}(),r=t.materialcomponents=t.materialcomponents||{},s=t.materialcomponents.utils=t.materialcomponents.utils||{};s.guid=function(){return a.crypto.randomUUID()},s.throttle=function(i,t){let a=0;return function(...e){var s=(new Date).getTime();s-a<t||(a=s,i(...e))}},s.register=function(e,i,s="template"){r[i.name]=i,t.components.register(e,{template:i[s],viewModel:{createViewModel:(e,s)=>((e=e||{}).element=s.element.querySelector?s.element:s.element.parentElement||s.element.parentNode,new i(e))}})};function e(e){console.debug("Icon()"),this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_icon_"+s.guid()),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||"")}function o(e){console.debug("CircularProgress()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_circular-progress_"+s.guid()),this.label=t.isObservable(e.label)?e.label:t.observable(e.label||""),this.isOpen=t.isObservable(e.isOpen)?e.isOpen:t.observable("boolean"!=typeof e.isOpen||e.isOpen),this.isDeterminate=t.isObservable(e.isDeterminate)?e.isDeterminate:t.observable("boolean"!=typeof e.isDeterminate||e.isDeterminate),this.progress=t.isObservable(e.progress)?e.progress:t.observable("number"==typeof e.progress?e.progress:0),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._isOpenChangedSubscribe=null,this._isDeterminateChangedSubscribe=null,this._progressChangedSubscribe=null}function c(e){console.debug("LinearProgress()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_linear-progress_"+s.guid()),this.label=t.isObservable(e.label)?e.label:t.observable(e.label||""),this.isOpen=t.isObservable(e.isOpen)?e.isOpen:t.observable("boolean"!=typeof e.isOpen||e.isOpen),this.isDeterminate=t.isObservable(e.isDeterminate)?e.isDeterminate:t.observable("boolean"!=typeof e.isDeterminate||e.isDeterminate),this.progress=t.isObservable(e.progress)?e.progress:t.observable("number"==typeof e.progress?e.progress:0),this.buffer=t.isObservable(e.buffer)?e.buffer:t.observable("number"==typeof e.buffer?e.buffer:0),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._isOpenChangedSubscribe=null,this._isDeterminateChangedSubscribe=null,this._progressChangedSubscribe=null,this._bufferChangedSubscribe=null}e.prototype.koDescendantsComplete=function(e){e.replaceWith(e.firstElementChild)},e.prototype.dispose=function(){console.log("~Icon()")},e.template='<i class="material-icons" data-bind="text: icon, class: classes, attr: { id: id }"></i>',s.register("mat-icon",e),o.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new i.circularProgress.MDCCircularProgress(s),this._isOpenChangedSubscribe=this.isOpen.subscribe(this._isOpenChanged,this),this._isDeterminateChangedSubscribe=this.isDeterminate.subscribe(this._isDeterminateChanged,this),this._progressChangedSubscribe=this.progress.subscribe(this._progressChanged,this),this.isOpen.valueHasMutated(),this.isDeterminate.valueHasMutated(),this.progress.valueHasMutated()},o.prototype.dispose=function(){console.log("~CircularProgress()"),this._isOpenChangedSubscribe.dispose(),this._isDeterminateChangedSubscribe.dispose(),this._progressChangedSubscribe.dispose(),this.mdcComponent.destroy()},o.prototype._isOpenChanged=function(e){this.mdcComponent[e?"open":"close"]()},o.prototype._isDeterminateChanged=function(e){this.mdcComponent.determinate=e},o.prototype._progressChanged=function(e){this.mdcComponent.progress=e},o.template=`<div class="mdc-circular-progress" style="width:48px;height:48px;" role="progressbar" aria-valuemin="0" aria-valuemax="1"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-circular-progress__determinate-container">
        <svg class="mdc-circular-progress__determinate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
            <circle class="mdc-circular-progress__determinate-track" cx="24" cy="24" r="18" stroke-width="4"/>
            <circle class="mdc-circular-progress__determinate-circle" cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="113.097" stroke-width="4"/>
        </svg>
    </div>
    <div class="mdc-circular-progress__indeterminate-container">
        <div class="mdc-circular-progress__spinner-layer">
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549" stroke-width="4"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__gap-patch">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549" stroke-width="3.2"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="24" cy="24" r="18" stroke-dasharray="113.097" stroke-dashoffset="56.549" stroke-width="4"/>
                </svg>
            </div>
        </div>
    </div>
</div>`,o.templateMedium=`<div class="mdc-circular-progress" style="width:36px;height:36px;" role="progressbar" aria-valuemin="0" aria-valuemax="1"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-circular-progress__determinate-container">
        <svg class="mdc-circular-progress__determinate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
            <circle class="mdc-circular-progress__determinate-track" cx="16" cy="16" r="12.5" stroke-width="3"/>
            <circle class="mdc-circular-progress__determinate-circle" cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="78.54" stroke-width="3"/>
        </svg>
    </div>
    <div class="mdc-circular-progress__indeterminate-container">
        <div class="mdc-circular-progress__spinner-layer">
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="39.27" stroke-width="3"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__gap-patch">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="39.27" stroke-width="2.4"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="16" cy="16" r="12.5" stroke-dasharray="78.54" stroke-dashoffset="39.27" stroke-width="3"/>
                </svg>
            </div>
        </div>
    </div>
</div>`,o.templateSmall=`<div class="mdc-circular-progress" style="width:24px;height:24px;" role="progressbar" aria-valuemin="0" aria-valuemax="1"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-circular-progress__determinate-container">
        <svg class="mdc-circular-progress__determinate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <circle class="mdc-circular-progress__determinate-track" cx="12" cy="12" r="8.75" stroke-width="2.5"/>
            <circle class="mdc-circular-progress__determinate-circle" cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="54.978" stroke-width="2.5"/>
        </svg>
    </div>
    <div class="mdc-circular-progress__indeterminate-container">
        <div class="mdc-circular-progress__spinner-layer">
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="27.489" stroke-width="2.5"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__gap-patch">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="27.489" stroke-width="2"/>
                </svg>
            </div>
            <div class="mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right">
                <svg class="mdc-circular-progress__indeterminate-circle-graphic" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <circle cx="12" cy="12" r="8.75" stroke-dasharray="54.978" stroke-dashoffset="27.489" stroke-width="2.5"/>
                </svg>
            </div>
        </div>
    </div>
</div>`,s.register("mat-circular-progress",o),s.register("mat-circular-progress-medium",o,"templateMedium"),s.register("mat-circular-progress-small",o,"templateSmall");c.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new i.linearProgress.MDCLinearProgress(s),this._isOpenChangedSubscribe=this.isOpen.subscribe(this._isOpenChanged,this),this._isDeterminateChangedSubscribe=this.isDeterminate.subscribe(this._isDeterminateChanged,this),this._progressChangedSubscribe=this.progress.subscribe(this._progressChanged,this),this._bufferChangedSubscribe=this.buffer.subscribe(this._bufferChanged,this),this.isOpen.valueHasMutated(),this.isDeterminate.valueHasMutated(),this.progress.valueHasMutated(),this.buffer.valueHasMutated()},c.prototype.dispose=function(){console.log("~LinearProgress()"),this._isOpenChangedSubscribe.dispose(),this._isDeterminateChangedSubscribe.dispose(),this._progressChangedSubscribe.dispose(),this._bufferChangedSubscribe.dispose(),this.mdcComponent.destroy()},c.prototype._isOpenChanged=function(e){this.mdcComponent[e?"open":"close"]()},c.prototype._isDeterminateChanged=function(e){this.mdcComponent.determinate=e},c.prototype._progressChanged=function(e){this.mdcComponent.progress=e},c.prototype._bufferChanged=function(e){this.mdcComponent.buffer=e},c.template=`<div role="progressbar" class="mdc-linear-progress" aria-valuemin="0" aria-valuemax="1" aria-valuenow="0"
    data-bind="attr: { id: id, 'aria-label': label }, class: classes">
    <div class="mdc-linear-progress__buffer">
        <div class="mdc-linear-progress__buffer-bar"></div>
        <div class="mdc-linear-progress__buffer-dots"></div>
    </div>
    <div class="mdc-linear-progress__bar mdc-linear-progress__primary-bar">
        <span class="mdc-linear-progress__bar-inner"></span>
    </div>
    <div class="mdc-linear-progress__bar mdc-linear-progress__secondary-bar">
        <span class="mdc-linear-progress__bar-inner"></span>
    </div>
</div>`,s.register("mat-linear-progress",c);function n(e){console.debug("Tooltip()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_tooltip_"+s.guid()),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.data=t.isObservable(e.data)?e.data:t.observable(e.data||""),this.showDelay=t.isObservable(e.showDelay)?e.showDelay:t.observable("number"==typeof e.showDelay?e.showDelay:n.SHOW_DELAY),this.hideDelay=t.isObservable(e.hideDelay)?e.hideDelay:t.observable("number"==typeof e.hideDelay?e.hideDelay:n.HIDE_DELAY),this.xPosition=t.isObservable(e.xPosition)?e.xPosition:t.observable(e.xPosition||n.X_POSITION.DETECTED),this.yPosition=t.isObservable(e.yPosition)?e.yPosition:t.observable(e.yPosition||n.Y_POSITION.DETECTED),this.anchor=e.anchor||null,this._showDelayChangedSubscribe=null,this._hideDelayChangedSubscribe=null,this._positionChangedSubscribe=null}n.prototype.koDescendantsComplete=function(e){var s;this.anchor=e.parentElement.querySelector(this.anchor),this.anchor?(this.anchor.setAttribute("aria-describedby",this.id()),a.document.body.append(e),s=e.firstElementChild,e.replaceWith(s),this.mdcComponent=new i.tooltip.MDCTooltip(s),this._showDelayChangedSubscribe=this.showDelay.subscribe(this._showDelayChanged,this),this._hideDelayChangedSubscribe=this.hideDelay.subscribe(this._hideDelayChanged,this),this._positionChangedSubscribe=t.computed(this._positionChanged,this).extend({deferred:!0}),this.showDelay.valueHasMutated(),this.hideDelay.valueHasMutated(),this.xPosition.valueHasMutated(),this.yPosition.valueHasMutated()):console.warn("Tooltip : Missing anchor element for tooltip '%s'.",this.id())},n.prototype.dispose=function(){console.log("~Tooltip()"),this.anchor&&(this._showDelayChangedSubscribe.dispose(),this._hideDelayChangedSubscribe.dispose(),this._positionChangedSubscribe.dispose(),this.mdcComponent.destroy(),this.anchor.removeAttribute("aria-describedby"))},n.prototype._showDelayChanged=function(e){this.mdcComponent.setShowDelay(e)},n.prototype._hideDelayChanged=function(e){this.mdcComponent.setHideDelay(e)},n.prototype._positionChanged=function(){var e=this.xPosition(),s=this.yPosition();t.computedContext.isInitial()||this.mdcComponent.setTooltipPosition({xPos:e,yPos:s})},n.X_POSITION={DETECTED:0,START:1,CENTER:2,END:3,SIDE_START:4,SIDE_END:5},n.Y_POSITION={DETECTED:0,ABOVE:1,BELOW:2,SIDE:3},n.SHOW_DELAY=500,n.HIDE_DELAY=600,n.template=`<div class="mdc-tooltip" role="tooltip" aria-hidden="true"
    data-bind="attr: { id: id }, class: classes">
    <div class="mdc-tooltip__surface mdc-tooltip__surface-animation">
        <span class="mdc-tooltip__label" data-bind="template: { nodes: $componentTemplateNodes, data: data }"><span>
    </div>
</div>`,s.register("mat-tooltip",n);function l(e){console.debug("RichTooltip()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_rich-tooltip_"+s.guid()),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.data=t.isObservable(e.data)?e.data:t.observable(e.data||""),this.showDelay=t.isObservable(e.showDelay)?e.showDelay:t.observable("number"==typeof e.showDelay?e.showDelay:n.SHOW_DELAY),this.hideDelay=t.isObservable(e.hideDelay)?e.hideDelay:t.observable("number"==typeof e.hideDelay?e.hideDelay:n.HIDE_DELAY),this.isPersistent=t.isObservable(e.isPersistent)?e.isPersistent:t.observable("boolean"==typeof e.isPersistent&&e.isPersistent),this.anchor=e.anchor||null,this._showDelayChangedSubscribe=null,this._hideDelayChangedSubscribe=null}function d(e){console.debug("IconButton()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_icon-button_"+s.guid()),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isFocused=t.isObservable(e.isFocused)?e.isFocused:t.observable("boolean"==typeof e.isFocused&&e.isFocused),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.isLoading=t.observable(!1),this.onClick=e.onClick}l.prototype.koDescendantsComplete=function(e){var s;this.anchor=e.parentElement.querySelector(this.anchor),this.anchor?(this.anchor.setAttribute("data-tooltip-id",this.id()),this.anchor.setAttribute("aria-haspopup","dialog"),this.anchor.setAttribute("aria-expanded","false"),s=e.firstElementChild,e.replaceWith(s),this.mdcComponent=new i.tooltip.MDCTooltip(s),this._showDelayChangedSubscribe=this.showDelay.subscribe(this._showDelayChanged,this),this._hideDelayChangedSubscribe=this.hideDelay.subscribe(this._hideDelayChanged,this),this.showDelay.valueHasMutated(),this.hideDelay.valueHasMutated()):console.warn("RichTooltip : Missing anchor element for tooltip '%s'.",this.id())},l.prototype.dispose=function(){console.log("~RichTooltip()"),this.anchor&&(this._showDelayChangedSubscribe.dispose(),this._hideDelayChangedSubscribe.dispose(),this.mdcComponent.destroy(),this.anchor.removeAttribute("data-tooltip-id"),this.anchor.removeAttribute("aria-haspopup"),this.anchor.removeAttribute("aria-expanded"))},l.prototype._showDelayChanged=function(e){this.mdcComponent.setShowDelay(e)},l.prototype._hideDelayChanged=function(e){this.mdcComponent.setHideDelay(e)},l.template=`<div class="mdc-tooltip mdc-tooltip--rich" role="dialog" aria-hidden="true"
      data-bind="attr: { 
        id: id,
        tabindex: isPersistent() ? -1 : 0,
        'data-mdc-tooltip-persistent': isPersistent
    }, class: classes">
    <div class="mdc-tooltip__surface mdc-tooltip__surface-animation"
         data-bind="template: { nodes: $componentTemplateNodes, data: data }">
    </div>
</div>`,s.register("mat-rich-tooltip",l);d.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new i.ripple.MDCRipple(s),this.mdcComponent.unbounded=!0},d.prototype.dispose=function(){console.log("~IconButton()"),this.mdcComponent.destroy()},d.prototype._onClick=function(e){var s;"function"!=typeof this.onClick?console.debug("IconButton : _onClick(): Callback for the 'click' event is not defined."):"object"==typeof(s=this.onClick())&&"function"==typeof s.then&&(this.isFocused(!1),this.isEnabled(!1),this.isLoading(!0),s.then(()=>{this.isLoading(!1),this.isEnabled(!0)}))},d.template=`<button class="mdc-icon-button"
    data-bind="attr: { id: id }, enable: isEnabled, hasFocus: isFocused, class: classes, click: _onClick">
    <span class="mdc-icon-button__ripple"></span>
    <span class="mdc-icon-button__focus-ring"></span>
    <i class="material-icons"
        data-bind="text: icon, style: { visibility: isLoading() ? 'hidden' : 'visible' }"></i>
    <mat-circular-progress-small params="isDeterminate: false, isOpen: isLoading, classes: 'mdc-circular-progress--icon-button'"></mat-circular-progress-small>
</button>`,s.register("mat-icon-button",d);function h(e){console.debug("Button()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_button_"+s.guid()),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.iconPosition=t.isObservable(e.iconPosition)?e.iconPosition:t.observable(e.iconPosition||h.ICON_POSITION.start),this.type=t.isObservable(e.type)?e.type:t.observable(e.type||h.TYPE.text),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isFocused=t.isObservable(e.isFocused)?e.isFocused:t.observable("boolean"==typeof e.isFocused&&e.isFocused),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.isLoading=t.observable(!1),this.onClick=e.onClick}function b(e){console.debug("Fab()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_fab_"+s.guid()),this.icon=t.isObservable(e.icon)?e.icon:t.observable(e.icon||""),this.iconPosition=t.isObservable(e.iconPosition)?e.iconPosition:t.observable(e.iconPosition||b.ICON_POSITION.start),this.text=t.isObservable(e.text)?e.text:t.observable(e.text||""),this.type=t.isObservable(e.type)?e.type:t.observable(e.type||b.TYPE.regular),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isFocused=t.isObservable(e.isFocused)?e.isFocused:t.observable("boolean"==typeof e.isFocused&&e.isFocused),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this.isLoading=t.observable(!1),this.onClick=e.onClick}h.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new i.ripple.MDCRipple(s)},h.prototype.dispose=function(){console.log("~Button()"),this.mdcComponent.destroy()},h.prototype._onClick=function(e){var s;"function"!=typeof this.onClick?console.debug("Button : _onClick(): Callback for the 'click' event is not defined."):"object"==typeof(s=this.onClick())&&"function"==typeof s.then&&(this.isFocused(!1),this.isEnabled(!1),this.isLoading(!0),s.then(()=>{this.isLoading(!1),this.isEnabled(!0)}))},h.TYPE={text:0,outlined:1,raised:2},h.ICON_POSITION={start:0,end:1},h.template=`<button class="mdc-button"
         data-bind="css: {
            'mdc-button--icon-leading': icon().length && iconPosition() === ${h.ICON_POSITION.start},
            'mdc-button--icon-trailing': icon().length && iconPosition() === ${h.ICON_POSITION.end},
            'mdc-button--outlined': type() === ${h.TYPE.outlined},
            'mdc-button--raised': type() === ${h.TYPE.raised}
        }, attr: { id: id }, enable: isEnabled, hasFocus: isFocused, class: classes, click: _onClick">
    <span class="mdc-button__ripple"></span>
    <span class="mdc-button__focus-ring"></span>
    <i class="material-icons mdc-button__icon" aria-hidden="true"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${h.ICON_POSITION.start}"></i>
    <span class="mdc-button__label" data-bind="text: text"></span>
    <i class="material-icons mdc-button__icon" aria-hidden="true"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${h.ICON_POSITION.end}"></i>
    <mat-linear-progress params="isDeterminate: false, isOpen: isLoading, classes: 'mdc-linear-progress--button'"></mat-linear-progress>
</button>`,s.register("mat-button",h);b.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new i.ripple.MDCRipple(s)},b.prototype.dispose=function(){console.log("~Fab()"),this.mdcComponent.destroy()},b.prototype._onClick=function(e){var s;"function"!=typeof this.onClick?console.debug("Fab : _onClick(): Callback for the 'click' event is not defined."):"object"==typeof(s=this.onClick())&&"function"==typeof s.then&&(this.isFocused(!1),this.isEnabled(!1),this.isLoading(!0),s.then(()=>{this.isLoading(!1),this.isEnabled(!0)}))},b.TYPE={regular:0,mini:1,extended:2},b.ICON_POSITION={start:0,end:1},b.template=`<button class="mdc-fab"
         data-bind="css: {
            'mdc-fab--mini': type() === ${b.TYPE.mini},
            'mdc-fab--extended': type() === ${b.TYPE.extended}
         }, attr: { id: id }, enable: isEnabled, hasFocus: isFocused, class: classes, click: _onClick">
    <span class="mdc-fab__ripple"></span>
    <span class="mdc-fab__focus-ring"></span>
    <i class="mdc-fab__icon material-icons"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${b.ICON_POSITION.start}, style: { visibility: isLoading() ? 'hidden' : 'visible' }"></i>
    <span class="mdc-fab__touch"></span>
    <span class="mdc-fab__label" data-bind="text: text, visible: type() === ${b.TYPE.extended}"></span>
    <i class="mdc-fab__icon material-icons"
       data-bind="text: icon, visible: icon().length && iconPosition() === ${b.ICON_POSITION.end}, style: { visibility: isLoading() ? 'hidden' : 'visible' }"></i>
    <mat-circular-progress-small params="isDeterminate: false,
                                         isOpen: isLoading,
                                         classes: type() === ${b.TYPE.mini} ? 'mdc-circular-progress--fab-mini' : 
                                                  type() === ${b.TYPE.extended} && iconPosition() === ${b.ICON_POSITION.start} ? 'mdc-circular-progress--fab-extended-start' : 
                                                  type() === ${b.TYPE.extended} && iconPosition() === ${b.ICON_POSITION.end} ? 'mdc-circular-progress--fab-extended-end' : 'mdc-circular-progress--fab'"></mat-circular-progress-small>
</button>`,s.register("mat-fab",b);function p(e){console.debug("Switch()"),this.mdcComponent=null,this.id=t.isObservable(e.id)?e.id:t.observable(e.id||"_switch_"+s.guid()),this.isEnabled=t.isObservable(e.isEnabled)?e.isEnabled:t.observable("boolean"!=typeof e.isEnabled||e.isEnabled),this.isChecked=t.isObservable(e.isChecked)?e.isChecked:t.observable("boolean"==typeof e.isChecked&&e.isChecked),this.classes=t.isObservable(e.classes)?e.classes:t.observable(e.classes||""),this._isEnabledChangedSubscribe=null,this._isCheckedChangedSubscribe=null,this._observer=null}p.prototype.koDescendantsComplete=function(e){var s=e.firstElementChild;e.replaceWith(s),this.mdcComponent=new i.switchControl.MDCSwitch(s),this._isEnabledChangedSubscribe=this.isEnabled.subscribe(this._isEnabledChanged,this),this._isCheckedChangedSubscribe=this.isChecked.subscribe(this._isCheckedChanged,this),this.isEnabled.valueHasMutated(),this.isChecked.valueHasMutated(),this._observer=new MutationObserver(this._onObserve.bind(this)),this._observer.observe(s,{attributes:!0,attributeFilter:["aria-checked"],attributeOldValue:!0})},p.prototype.dispose=function(){console.log("~Switch()"),this._observer.disconnect(),this._isEnabledChangedSubscribe.dispose(),this._isCheckedChangedSubscribe.dispose(),this.mdcComponent.destroy()},p.prototype._onObserve=function(e){e.forEach(e=>{"attributes"===e.type&&(this._isCheckedChangedSubscribe.dispose(),this.isChecked("true"===e.target.getAttribute("aria-checked")),this._isCheckedChangedSubscribe=this.isChecked.subscribe(this._isCheckedChanged,this))})},p.prototype._isCheckedChanged=function(e){this.mdcComponent.selected=e},p.prototype._isEnabledChanged=function(e){this.mdcComponent.disabled=!e},p.template=`<button id="basic-switch" class="mdc-switch mdc-switch--unselected" type="button" role="switch" aria-checked="false"
         data-bind="attr: { id: id }, class: classes">
    <div class="mdc-switch__track"></div>
    <div class="mdc-switch__handle-track">
        <div class="mdc-switch__handle">
            <div class="mdc-switch__shadow">
                <div class="mdc-elevation-overlay"></div>
            </div>
            <div class="mdc-switch__ripple"></div>
            <div class="mdc-switch__icons">
                <svg class="mdc-switch__icon mdc-switch__icon--on" viewBox="0 0 24 24">
                    <path d="M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z" />
                </svg>
                <svg class="mdc-switch__icon mdc-switch__icon--off" viewBox="0 0 24 24">
                    <path d="M20 13H4v-2h16v2z" />
                </svg>
            </div>
        </div>
    </div>
    <span class="mdc-switch__focus-ring-wrapper">
        <div class="mdc-switch__focus-ring"></div>
    </span>
</button>`,s.register("mat-switch",p)});